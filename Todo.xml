<items>

<item>
Put the names of the enumeration types in <r:func>genEnumCollector</r:func>.
</item>

<item>
Borrow the CRoutine and RFunction classes from RGCCTU and code for pretty printing
code.
</item>


<item>
Turn on USE_S4_ENUMS in src/Makevars.in
</item>


<item>
getType function 
<br/>
Just as(x, "CXType")
</item>

<item>
Fill in the other routines of the API using RGCCTU.
Resolve the existing code with the CXTypePtr, etc.
Either tell RGCCTU what name to use, or change the existing code!
</item>

<item>
Function to read a header file. Ideally w/o writing a .c file.
</item>
<item>
Getting the name of a type doesn't seem to be working anymore.
See tests/fib.R.
Is this  just for basic types?
<r:code>
 getTypeKind(fib$returnType) == CXType_Int
</r:code>
</item>

<item>
Add finalizers, e.g. disposeTranslationUnit
Have to worry about holding elements belonging to it, e.g. cursors.
</item>

<item>
If we can't create the TU, get an error message.
The -Xclang doesn't work anymore.
</item>

<item status="done">
If the visitor function  doesn't return an integer,
do it for them.
Can try to coerce, but probably not a great idea.
</item>

<item>
Enumeration values when not default
</item>

<item>
Getting C++ routines
</item>

<item>
Precompiled headers
</item>
</items>